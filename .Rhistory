axis.text.x = element_text(size = 10),
axis.title.x = element_text(size = 13),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 13),
legend.text = element_text(size = 10),
legend.position = c(0.975, 0.9), legend.justification = c(1, 1)) +
scale_colour_manual(name = "", values = c(power_color, target_color),
labels = c("Power Method", "Target")) +
scale_linetype_manual(name ="", values = c(1, target_lty),
labels = c("Power Method", "Target"))
x <- y
y_fx <- numeric(n)
if (!is.null(fx)) {
for (j in 1:n) {
y_fx[j] <- fx(x[j])
}
}
if (is.null(fx)) {
D <- data.frame(Dist = c("Beta", "Chisq", "Exponential", "F", "Gamma",
"Gaussian", "Laplace", "Logistic", "Lognormal",
"Pareto", "Rayleigh", "t", "Triangular",
"Uniform", "Weibull"),
pdf = c("dbeta", "dchisq", "dexp", "df", "dgamma",
"dnorm", "dlaplace", "dlogis", "dlnorm",
"dpareto", "dgenray", "dt", "dtriangle",
"dunif", "dweibull"),
fx = c("rbeta", "rchisq", "rexp", "rf", "rgamma",
"rnorm", "rlaplace", "rlogis", "rlnorm",
"rpareto", "rgenray", "rt", "rtriangle",
"runif", "rweibull"),
Lower = as.numeric(c(0, 0, 0, 0, 0, -Inf, -Inf, -Inf,
0, params[1], 0, -Inf, params[1],
params[1], 0)),
Upper = as.numeric(c(1, Inf, Inf, Inf, Inf, Inf, Inf,
Inf, Inf, Inf, Inf, Inf, params[2],
params[2], Inf)))
i <- match(Dist, D$Dist)
p <- as.character(D$pdf[i])
for (j in 1:n) {
if (length(params) == 1) y_fx[j] <- get(p)(x[j], params[1])
if (length(params) == 2) y_fx[j] <- get(p)(x[j], params[1], params[2])
if (length(params) == 3) y_fx[j] <- get(p)(x[j], params[1], params[2],
params[3])
}
}
summary(y_fx)
summary(fy)
data <- data.frame(y = y, fy = fy, type = as.factor(rep("sim", length(y))))
data2 <- data.frame(y = x, fy = y_fx, type = as.factor(rep("theory",
length(y_fx))))
summary(data$fy)
summary(data2$fy)
data2 <- data.frame(rbind(data, data2))
summary(data2$fy)
plot1 <- ggplot() + theme_bw() + ggtitle(title) +
geom_line(data = data2[data2$type == "sim", ],
aes_(x = ~y, y = ~fy, colour = ~type, lty = ~type)) +
geom_line(data = data2[data2$type == "theory", ],
aes_(x = ~y, y = ~fy, colour = ~type, lty = ~type)) +
scale_x_continuous(name = "y", limits = c(ylower, yupper)) +
scale_y_continuous(name = "Probability",
limits = c(min(data2$fy), max(data2$fy))) +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
axis.text.x = element_text(size = 10),
axis.title.x = element_text(size = 13),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 13),
legend.text = element_text(size = 10),
legend.position = c(0.975, 0.9), legend.justification = c(1, 1)) +
scale_colour_manual(name = "", values = c(power_color, target_color),
labels = c("Power Method", "Target")) +
scale_linetype_manual(name ="", values = c(1, target_lty),
labels = c("Power Method", "Target"))
plot1
library(SimMultiCorrData)
plot_pdf_theory(c = A$constants[2,],method="Polynomial",overlay=FALSE,mu=32,sigma=8)
plot_pdf_theory(c = A$constants[2,],method="Polynomial",Dist="Chisq",params=32)
library(SimMultiCorrData)
?plot_sim_pdf_theory
plot_sim_pdf_theory(sim_y = A$continuous_variables[,2],Dist="Chisq",params=32)
plot_sim_pdf_theory(sim_y = A$continuous_variables[,2],overlay=FALSE)
plot_sim_ext(sim_y = A$continuous_variables[,2],ext_y=rchisq(10000,32))
?plot_sim_pdf_ext
plot_sim_pdf_ext(sim_y = A$continuous_variables[,2],ext_y=rchisq(10000,32))
plot_sim_theory(sim_y = A$continuous_variables[,2],Dist="Chisq",params=32)
library(SimMultiCorrData)
plot_sim_theory(sim_y = A$continuous_variables[,2],Dist="Chisq",params=32)
library(SimMultiCorrData)
plot_sim_theory(sim_y = A$continuous_variables[,2],Dist="Chisq",params=32)
plot_sim_theory(sim_y = A$continuous_variables[,2],Dist="Chisq",params=32,overlay=FALSE)
plot_sim_theory(sim_y = A$continuous_variables[,2],Dist="Chisq",params=32,overlay=TRUE)
B = rcorrvar(k_cat=2,marginal=list(0.4,c(0.2,0.5,0.7)),rho=matrix(c(1,0.3,0.3,1),2,2),seed=1234)
B2 = rcorrvar(k_cat=2,marginal=list(0.4,c(0.2,0.5,0.7)),rho=matrix(c(1,0.3,0.3,1),2,2),seed=104)
plot_sim_cdf(sim_y = B$ordinal_variables[,1],calc_cprob = FALSE)
plot_sim_ext(sim_y = B$ordinal_variables[,1],ext_y=B2$ordinal_variables[,1])
table(as.factor(B$ordinal_variables[,1]))
table(as.factor(B2$ordinal_variables[,1]))
plot_sim_ext(sim_y = B$ordinal_variables[,2],ext_y=B2$ordinal_variables[,2])
plot_sim_theory(sim_y = B$ordinal_variables[,1],overlay=FALSE)
plot_sim_pdf_ext(sim_y = B$ordinal_variables[,1],ext_y=B2$ordinal_variables[,1])
C = rcorrvar(k_pois=2,lam=c(10,15),rho=matrix(c(1,0.3,0.3,1),2,2),seed=1234)
plot_sim_ext(sim_y = C$Poisson_variables[,1],ext_y=rpois(10000,10))
plot_sim_cdf(sim_y = D$Neg_Bin_variables[,1],calc_cprob = FALSE)
D = rcorrvar(k_nb=2,size=c(10,15),prob=c(0.4,0.3),rho=matrix(c(1,0.3,0.3,1),2,2),seed=1234)
plot_sim_cdf(sim_y = D$Neg_Bin_variables[,1],calc_cprob = FALSE)
plot_sim_ext(sim_y = D$Neg_Bin_variables[,1],ext_y=rnbinom(10000,10,0.4))
plot_sim_pdf_ext(sim_y = C$Poisson_variables[,1],ext_y=rpois(10000,10))
plot_sim_pdf_ext(sim_y = D$Neg_Bin_variables[,1],ext_y=rnbinom(10000,10,0.4))
plot_sim_pdf_theory(sim_y = C$Poisson_variables[,1],overlay=FALSE)
plot_sim_pdf_theory(sim_y = D$Neg_Bin_variables[,1],overlay=FALSE)
plot_sim_theory(sim_y = C$Poisson_variables[,1],overlay=FALSE)
plot_sim_theory(sim_y = D$Neg_Bin_variables[,1],overlay=FALSE)
plot_sim_theory(sim_y = C$Poisson_variables[,1],overlay=TRUE,Dist="Poisson",params=10)
?sim_cdf_prob()
sim_cdf_prob(sim_y = B$ordinal_variables[,1],delta=2)
sim_cdf_prob(sim_y = B$ordinal_variables[,1],delta=1)
sim_cdf_prob(sim_y = B$ordinal_variables[,2],delta=2)
?geom_area
library(ggplot2)
sim_y = B$ordinal_variables[,2]
title = "Empirical Cumulative Distribution Function"
ylower = NULL; yupper = NULL; calc_cprob = TRUE
delta = 2; color = "dark blue"; fill = "blue";
hline = "dark green"
if (is.null(ylower) & is.null(yupper)) {
ylower <- min(sim_y)
yupper <- max(sim_y)
}
data <- data.frame(y = sim_y)
plot1 <- ggplot(data,  aes_(~y)) + stat_ecdf(geom = "step", colour = color) +
theme_bw() + geom_hline(yintercept = 0, lty = 2, colour = "#333333") +
geom_hline(yintercept = 1, lty = 2, colour = "#333333") + ggtitle(title) +
scale_x_continuous(name = "y", limits = c(ylower, yupper)) +
scale_y_continuous(name = "Cumulative Probability") +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
legend.position = "none", axis.text.x  = element_text(size = 10),
axis.title.x = element_text(size = 13),
axis.text.y  = element_text(size = 10),
axis.title.y = element_text(size = 13))
plot1
cprob <- sim_cdf_prob(sim_y = sim_y, delta = delta)
data2 <- data.frame(y = data[data[, 1] <= delta, ])
data2$cum_prob <- cprob$Fn(as.numeric(data2[, 1]))
text_one <- textGrob(paste("Cumulative probability = ",
round(cprob$cumulative_prob, 4), ", y = ",
round(delta, 4), sep = ""),
gp = gpar(fontsize = 11, fontface = "bold",
col = hline))
plot1 <- plot1 +
geom_col(data = data2, aes_(x = ~y, y = ~cum_prob), fill = fill) +
geom_hline(yintercept = cprob$cumulative_prob, lty = 2, colour = hline) +
annotation_custom(text_one, xmin = 0.5 * (ylower + yupper),
xmax = 0.5 * (ylower + yupper), ymin = 1.03,
ymax = 1.03)
plot1
head(data2)
plot1 <- ggplot(data,  aes_(~y)) + stat_ecdf(geom = "step", colour = color) +
theme_bw() + geom_hline(yintercept = 0, lty = 2, colour = "#333333") +
geom_hline(yintercept = 1, lty = 2, colour = "#333333") + ggtitle(title) +
scale_x_continuous(name = "y", limits = c(ylower, yupper)) +
scale_y_continuous(name = "Cumulative Probability") +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
legend.position = "none", axis.text.x  = element_text(size = 10),
axis.title.x = element_text(size = 13),
axis.text.y  = element_text(size = 10),
axis.title.y = element_text(size = 13))
cprob <- sim_cdf_prob(sim_y = sim_y, delta = delta)
data2 <- data.frame(y = data[data[, 1] <= delta, ])
data2$cum_prob <- cprob$Fn(as.numeric(data2[, 1]))
text_one <- textGrob(paste("Cumulative probability = ",
round(cprob$cumulative_prob, 4), ", y = ",
round(delta, 4), sep = ""),
gp = gpar(fontsize = 11, fontface = "bold",
col = hline))
plot2 <- plot1 +
geom_bar(data = data2, aes_(x = ~y, y = ~cum_prob), fill = fill) +
geom_hline(yintercept = cprob$cumulative_prob, lty = 2, colour = hline) +
annotation_custom(text_one, xmin = 0.5 * (ylower + yupper),
xmax = 0.5 * (ylower + yupper), ymin = 1.03,
ymax = 1.03)
plot2
?geom_bar
plot2 <- plot1 +
geom_col(data = data2, aes_(x = ~y, y = ~cum_prob), fill = fill) +
geom_hline(yintercept = cprob$cumulative_prob, lty = 2, colour = hline) +
annotation_custom(text_one, xmin = 0.5 * (ylower + yupper),
xmax = 0.5 * (ylower + yupper), ymin = 1.03,
ymax = 1.03)
plot2
plot2
cprob <- sim_cdf_prob(sim_y = sim_y, delta = delta)
data2 <- data.frame(y = as.numeric(data[data[, 1] <= delta, ]))
data2$cum_prob <- cprob$Fn(as.numeric(data2[, 1]))
text_one <- textGrob(paste("Cumulative probability = ",
round(cprob$cumulative_prob, 4), ", y = ",
round(delta, 4), sep = ""),
gp = gpar(fontsize = 11, fontface = "bold",
col = hline))
plot2 <- plot1 +
geom_area(data = data2, aes_(x = ~y, y = ~cum_prob), fill = fill) +
geom_hline(yintercept = cprob$cumulative_prob, lty = 2, colour = hline) +
annotation_custom(text_one, xmin = 0.5 * (ylower + yupper),
xmax = 0.5 * (ylower + yupper), ymin = 1.03,
ymax = 1.03)
plot2
plot1
head(data2)
class(data2$y)
class(data2$cum_prob)
?geom_polygon
?geom_area
plot2 <- plot1 +
geom_area(data = data2, aes_(x = ~y, y = ~cum_prob), fill = fill, stat = "bin") +
geom_hline(yintercept = cprob$cumulative_prob, lty = 2, colour = hline) +
annotation_custom(text_one, xmin = 0.5 * (ylower + yupper),
xmax = 0.5 * (ylower + yupper), ymin = 1.03,
ymax = 1.03)
plot2
plot2 <- plot1 +
geom_area(data = data2, aes_(x = ~y), fill = fill, stat = "bin") +
geom_hline(yintercept = cprob$cumulative_prob, lty = 2, colour = hline) +
annotation_custom(text_one, xmin = 0.5 * (ylower + yupper),
xmax = 0.5 * (ylower + yupper), ymin = 1.03,
ymax = 1.03)
plot2
plot2 <- plot1 +
geom_area(data = data2, aes_(x = ~y), fill = fill, stat = "bin", nbins = 100) +
geom_hline(yintercept = cprob$cumulative_prob, lty = 2, colour = hline) +
annotation_custom(text_one, xmin = 0.5 * (ylower + yupper),
xmax = 0.5 * (ylower + yupper), ymin = 1.03,
ymax = 1.03)
plot2
plot2 <- plot1 +
geom_area(data = data2, aes_(x = ~y), fill = fill, stat = "bin", bins = 100) +
geom_hline(yintercept = cprob$cumulative_prob, lty = 2, colour = hline) +
annotation_custom(text_one, xmin = 0.5 * (ylower + yupper),
xmax = 0.5 * (ylower + yupper), ymin = 1.03,
ymax = 1.03)
plot2
plot2
plot2 <- plot1 +
geom_area(data = data2, aes_(y = ..count..), fill = fill, stat = "bin", bins = 100) +
geom_hline(yintercept = cprob$cumulative_prob, lty = 2, colour = hline) +
annotation_custom(text_one, xmin = 0.5 * (ylower + yupper),
xmax = 0.5 * (ylower + yupper), ymin = 1.03,
ymax = 1.03)
plot2
plot2 <- plot1 +
geom_area(data = data2, aes_(y = ..density..), fill = fill, stat = "bin", bins = 100) +
geom_hline(yintercept = cprob$cumulative_prob, lty = 2, colour = hline) +
annotation_custom(text_one, xmin = 0.5 * (ylower + yupper),
xmax = 0.5 * (ylower + yupper), ymin = 1.03,
ymax = 1.03)
plot2
plot2 <- plot1 +
geom_area(data = data2, aes_(y = ..cum_prob..), fill = fill, stat = "bin", bins = 100) +
geom_hline(yintercept = cprob$cumulative_prob, lty = 2, colour = hline) +
annotation_custom(text_one, xmin = 0.5 * (ylower + yupper),
xmax = 0.5 * (ylower + yupper), ymin = 1.03,
ymax = 1.03)
plot2
?geom_bar
plot2 <- plot1 +
geom_col(data = data2, aes_(x = ~y, y = ~cum_prob), fill = fill, position = position_fill) +
geom_hline(yintercept = cprob$cumulative_prob, lty = 2, colour = hline) +
annotation_custom(text_one, xmin = 0.5 * (ylower + yupper),
xmax = 0.5 * (ylower + yupper), ymin = 1.03,
ymax = 1.03)
plot2
data2 <- data.frame(y = data[data[, 1] <= delta, ])
data2$cum_prob <- cprob$Fn(as.numeric(data2[, 1]))
text_one <- textGrob(paste("Cumulative probability = ",
round(cprob$cumulative_prob, 4), ", y = ",
round(delta, 4), sep = ""),
gp = gpar(fontsize = 11, fontface = "bold",
col = hline))
plot2 <- plot1 +
geom_col(data = data2, aes_(x = ~y, y = ~cum_prob), fill = fill, position = position_fill) +
geom_hline(yintercept = cprob$cumulative_prob, lty = 2, colour = hline) +
annotation_custom(text_one, xmin = 0.5 * (ylower + yupper),
xmax = 0.5 * (ylower + yupper), ymin = 1.03,
ymax = 1.03)
plot2
plot2 <- plot1 +
geom_col(data = data2, aes_(x = ~y, y = ~cum_prob), fill = fill, position = "fill") +
geom_hline(yintercept = cprob$cumulative_prob, lty = 2, colour = hline) +
annotation_custom(text_one, xmin = 0.5 * (ylower + yupper),
xmax = 0.5 * (ylower + yupper), ymin = 1.03,
ymax = 1.03)
plot2
plot2
sim_y = C$Poisson_variables[,1]
title = "Empirical Cumulative Distribution Function"
ylower = NULL; yupper = NULL; calc_cprob = TRUE
delta = 2; color = "dark blue"; fill = "blue";
hline = "dark green"
if (is.null(ylower) & is.null(yupper)) {
ylower <- min(sim_y)
yupper <- max(sim_y)
}
data <- data.frame(y = sim_y)
plot1 <- ggplot(data,  aes_(~y)) + stat_ecdf(geom = "step", colour = color) +
theme_bw() + geom_hline(yintercept = 0, lty = 2, colour = "#333333") +
geom_hline(yintercept = 1, lty = 2, colour = "#333333") + ggtitle(title) +
scale_x_continuous(name = "y", limits = c(ylower, yupper)) +
scale_y_continuous(name = "Cumulative Probability") +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
legend.position = "none", axis.text.x  = element_text(size = 10),
axis.title.x = element_text(size = 13),
axis.text.y  = element_text(size = 10),
axis.title.y = element_text(size = 13))
cprob <- sim_cdf_prob(sim_y = sim_y, delta = delta)
data2 <- data.frame(y = data[data[, 1] <= delta, ])
data2$cum_prob <- cprob$Fn(as.numeric(data2[, 1]))
text_one <- textGrob(paste("Cumulative probability = ",
round(cprob$cumulative_prob, 4), ", y = ",
round(delta, 4), sep = ""),
gp = gpar(fontsize = 11, fontface = "bold",
col = hline))
plot2 <- plot1 +
geom_col(data = data2, aes_(x = ~y, y = ~cum_prob), fill = fill, position = "fill") +
geom_hline(yintercept = cprob$cumulative_prob, lty = 2, colour = hline) +
annotation_custom(text_one, xmin = 0.5 * (ylower + yupper),
xmax = 0.5 * (ylower + yupper), ymin = 1.03,
ymax = 1.03)
plot2
plot2 <- plot1 +
geom_area(data = data2, aes_(x = ~as.numeric(y), y = ~cum_prob), fill = fill) +
geom_hline(yintercept = cprob$cumulative_prob, lty = 2, colour = hline) +
annotation_custom(text_one, xmin = 0.5 * (ylower + yupper),
xmax = 0.5 * (ylower + yupper), ymin = 1.03,
ymax = 1.03)
plot2
head(data2)
sim_y = C$Poisson_variables[,1]
title = "Empirical Cumulative Distribution Function"
ylower = NULL; yupper = NULL; calc_cprob = TRUE
delta = 10; color = "dark blue"; fill = "blue";
hline = "dark green"
if (is.null(ylower) & is.null(yupper)) {
ylower <- min(sim_y)
yupper <- max(sim_y)
}
data <- data.frame(y = sim_y)
plot1 <- ggplot(data,  aes_(~y)) + stat_ecdf(geom = "step", colour = color) +
theme_bw() + geom_hline(yintercept = 0, lty = 2, colour = "#333333") +
geom_hline(yintercept = 1, lty = 2, colour = "#333333") + ggtitle(title) +
scale_x_continuous(name = "y", limits = c(ylower, yupper)) +
scale_y_continuous(name = "Cumulative Probability") +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
legend.position = "none", axis.text.x  = element_text(size = 10),
axis.title.x = element_text(size = 13),
axis.text.y  = element_text(size = 10),
axis.title.y = element_text(size = 13))
cprob <- sim_cdf_prob(sim_y = sim_y, delta = delta)
data2 <- data.frame(y = data[data[, 1] <= delta, ])
data2$cum_prob <- cprob$Fn(as.numeric(data2[, 1]))
text_one <- textGrob(paste("Cumulative probability = ",
round(cprob$cumulative_prob, 4), ", y = ",
round(delta, 4), sep = ""),
gp = gpar(fontsize = 11, fontface = "bold",
col = hline))
plot2 <- plot1 +
geom_area(data = data2, aes_(x = ~as.numeric(y), y = ~cum_prob), fill = fill) +
geom_hline(yintercept = cprob$cumulative_prob, lty = 2, colour = hline) +
annotation_custom(text_one, xmin = 0.5 * (ylower + yupper),
xmax = 0.5 * (ylower + yupper), ymin = 1.03,
ymax = 1.03)
plot2
?calc_theory
Dist = "Poisson"; params = 10; sub=1000
D <- data.frame(Dist = c("Beta", "Chisq", "Exponential", "F", "Gamma",
"Gaussian", "Laplace", "Logistic", "Lognormal",
"Pareto", "Rayleigh", "t", "Triangular",
"Uniform", "Weibull", "Poisson",
"Negative_Binomial"),
pdf = c("dbeta", "dchisq", "dexp", "df", "dgamma",
"dnorm", "dlaplace", "dlogis", "dlnorm",
"dpareto", "dgenray", "dt", "dtriangle",
"dunif", "dweibull", "dpois", "dnbinom"),
fx = c("rbeta", "rchisq", "rexp", "rf", "rgamma",
"rnorm", "rlaplace", "rlogis", "rlnorm",
"rpareto", "rgenray", "rt", "rtriangle",
"runif", "rweibull", "rpois", "rnbinom"),
Lower = as.numeric(c(0, 0, 0, 0, 0, -Inf, -Inf, -Inf,
0, params[1], 0, -Inf, params[1],
params[1], 0, 0, 0)),
Upper = as.numeric(c(1, Inf, Inf, Inf, Inf, Inf, Inf,
Inf, Inf, Inf, Inf, Inf, params[2],
params[2], Inf, Inf, params[1])))
i <- match(Dist, D$Dist)
p <- as.character(D$pdf[i])
fx1 <- function(x) get(p)(x, params[1])
m <- integrate(function(x, FUN = fx1) x * FUN(x), D$Lower[i], D$Upper[i],
subdivisions = sub, stop.on.error = FALSE)$value
p
?plot_cdf
?plot_sim_cdf
?plot_pdf_theory
?plot_sim_pdf_ext
?plot_sim_cdf
D = rcorrvar(k_nb=2,size=c(10,15),prob=c(0.4,0.3),rho=matrix(c(1,0.3,0.3,1),2,2),seed=1234)
plot_sim_pdf_theory(sim_y = D$Neg_Bin_variables[,1],overlay=FALSE)
?plot_sim_pdf_theory
?rnbinom
library(SimMultiCorrData)
?plot_sim_pdf_theory
plot_sim_pdf_theory(sim_y = D$Neg_Bin_variables[,1],overlay=TRUE,var_type="count",Dist="Negative_Binomial",params=c(10,0.4))
plot_sim_pdf_theory(sim_y = D$Neg_Bin_variables[,1],overlay=TRUE,var_type="count",Dist="Negative_Binomial",params=c(10,0,10*0.6/0.4))
plot_sim_pdf_theory(sim_y = D$Neg_Bin_variables[,1],overlay=TRUE,var_type="count",Dist="Negative_Binomial",params=c(10,mu = 10*0.6/0.4))
plot_sim_pdf_theory(sim_y = C$Poisson_variables[,1],overlay=TRUE,Dist="Poisson",params=10)
plot_sim_pdf_theory(sim_y = C$Poisson_variables[,1],overlay=TRUE,var_type = "count",Dist="Poisson",params=10)
library(SimMultiCorrData)
D = rcorrvar(k_nb=2,size=c(10,15),prob=c(0.4,0.3),rho=matrix(c(1,0.3,0.3,1),2,2),seed=1234)
plot_sim_theory(sim_y = D$Neg_Bin_variables[,1],overlay=TRUE,cont_var=FALSE,Dist="Negative_Binomial",params=c(10,0.4))
?plot_sim_theory
?plot_sim_pdf_theory
?plot_sim_cdf
?calc_lower_skurt
?valid_corr
?rcorrvar
?stats_pdf
?valid_corr2
library(ggplot2)
?`ggplot2-package`
?cdf_prob
start.time = Sys.time()
con <- find_constants(method = "Polynomial", skews = -0.467707, skurts = -0.375,
fifths = 1.403122, sixths = -0.426136)$constants
cdf_prob(c = con, method = "Polynomial", delta = 0.5, mu = 0, sigma = 1)
start.time = Sys.time()
con <- find_constants(method = "Polynomial", skews = -0.467707, skurts = -0.375,
fifths = 1.403122, sixths = -0.426136)$constants
cdf_prob(c = con, method = "Polynomial", delta = 0.5, mu = 0, sigma = 1); stop.time = Sys.time()
stop.time - start.time
?rcorrvar
install.packages("printr")
library(printr)
?kable()
?stats_pdf
system("R CMD Rd2pdf C:/Users/Allison/Documents/SimMultiCorrData")
library(SimMultiCorrData)
system("R CMD Rd2pdf C:/Users/Allison/Documents/SimMultiCorrData")
library(devtools)
build_vignettes()
library(SimMultiCorrData)
system("R CMD Rd2pdf C:/Users/Allison/Documents/SimMultiCorrData")
?`SimMultiCorrData-package`
library(SimMultiCorrData)
library(devtools)
build_vignettes()
library(SimMultiCorrData)
library(SimMultiCorrData)
?`SimMultiCorrData-package`
library(knitr)
?kable()
?rcorrvar2
?nonnormvar1
library(SimMultiCorrData)
system("R CMD Rd2pdf C:/Users/Allison/Documents/SimMultiCorrData")
library(devtools)
build_vignettes()
library(SimMultiCorrData)
library(SimMultiCorrData)
library(devtools)
build_vignettes()
?rF
?rf
A <- calc_theory("F",params=c(2,1))
A <- calc_theory("F", params = c(10, 5))
A
library(SimMultiCorrData)
Sys.setenv(R_QPDF = "C:\\Users\\Allison\\Downloads\\qpdf-5.1.2-bin-mingw32\\qpdf-5.1.2\\bin\\qpdf.exe")
A[3]^2 - 2 >= A[4]
?calc_theory
A2 <- find_constants("Polynomial",A[3],A[4],A[5],A[6])
A <- calc_theory("F", params = c(10, 3))
A[3]^2 - 2 >= A[4]
A <- calc_theory("F", params = c(10, 10))
A[3]^2 - 2 >= A[4]
A <- calc_theory("F", params = c(50, 50))
A[3]^2 - 2 >= A[4]
A <- calc_theory("F", params = c(50, 60))
A[3]^2 - 2 >= A[4]
A <- calc_theory("F", params = c(50, 30))
A[3]^2 - 2 >= A[4]
A <- calc_theory("F", params = c(40, 30))
A[3]^2 - 2 >= A[4]
A <- calc_theory("F", params = c(100, 100))
A[3]^2 - 2 >= A[4]
A <- calc_theory("F", params = c(100, 150))
A[3]^2 - 2 >= A[4]
A <- calc_theory("F", params = c(100, 200))
A[3]^2 - 2 >= A[4]
A <- calc_theory("F", params = c(100, 300))
A[3]^2 - 2 >= A[4]
A <- calc_theory("F", params = c(50, 100))
A[3]^2 - 2 >= A[4]
library(SimMultiCorrData)
B <- calc_theory("Pareto", params = c(10, 5))
B[3]^2 - 2 >= B[4]
system("R CMD Rd2pdf C:/Users/Allison/Documents/SimMultiCorrData")
B <- calc_theory("Pareto", params = c(1, 5))
B[3]^2 - 2 >= B[4]
?uniroot()
fx <- function(x) {
(3*(1-2*x)*(2*x^2+x+3)/((1-3*x)*(1-4*x))) - 1 - ((2*(1+x)*sqrt(1-2*x))/(1-3*x))
}
uniroot(fx, interval=c(-1e-05,1e05))
uniroot(fx, interval=c(-1e-05,0.25))
uniroot(fx, interval=c(-1e05,0.25))
build_win(version="R-release")
