marginal = marginal, lam = lam, size = size,
prob = prob, rho = Rey[1:3, 1:3])
expect_equal(all.equal(valid_corr(k_cat = 1, k_pois = 1, k_nb = 1,
marginal = marginal, lam = lam, size = size,
prob = prob, rho = Rey[1:3, 1:3])$L_rho[1, 2], -0.7921534,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr(k_cat = 1, k_pois = 1, k_nb = 1,
marginal = marginal, lam = lam, size = size,
mu = mu, rho = Rey[1:3, 1:3])$L_rho[1, 2], -0.7921534,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr(k_cont = 1, k_cat = 1, k_pois = 1,
k_nb = 1, method = "Fleishman", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], marginal = marginal, support = list(c(0, 1)),
lam = lam, size = size, prob = prob, rho = Rey)$constants[1, "c3"],
0.03605955, tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr(k_cont = 1, k_cat = 1, k_pois = 1,
k_nb = 1, method = "Fleishman", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], marginal = marginal,
lam = lam, size = size, prob = prob, rho = Rey)$constants[1, "c3"],
0.03605955, tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr(k_cont = 1, k_cat = 1, k_pois = 1,
k_nb = 1, method = "Fleishman", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], marginal = marginal,
lam = lam, size = size, mu = mu, rho = Rey,
cstart = list(cstartF))$constants[1, "c3"], 0.03605955,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr(k_cont = 1, k_cat = 1, k_pois = 1,
k_nb = 1, method = "Fleishman", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], marginal = marginal,
lam = lam, size = size, mu = mu, rho = Rey)$constants[1, "c3"], 0.03605955,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr(k_cont = 1, k_cat = 0, k_pois = 1,
k_nb = 1, method = "Fleishman", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], lam = lam, size = size, prob = prob,
rho = Rey[1:3, 1:3])$constants[1, "c3"], 0.03605955,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr(k_cont = 1, k_cat = 0, k_pois = 1,
k_nb = 1, method = "Fleishman", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], lam = lam, size = size, mu = mu,
rho = Rey[1:3, 1:3])$constants[1, "c3"], 0.03605955,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr(k_cont = 1, k_cat = 1, k_pois = 0,
k_nb = 1, method = "Fleishman", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], marginal = marginal,
size = size, prob = prob, rho = Rey[1:3, 1:3])$constants[1, "c3"],
0.03605955, tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr(k_cont = 1, k_cat = 1, k_pois = 0,
k_nb = 1, method = "Fleishman", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], marginal = marginal,
size = size, mu = mu, rho = Rey[1:3, 1:3])$constants[1, "c3"], 0.03605955,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr(k_cont = 1, k_cat = 1, k_pois = 1,
method = "Fleishman", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], marginal = marginal,
lam = lam, rho = Rey[1:3, 1:3])$constants[1, "c3"], 0.03605955,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr(k_cont = 1, k_cat = 1, k_pois = 1,
k_nb = 1, method = "Polynomial", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], fifths = L[5], sixths = L[6], Six = Six,
marginal = marginal, lam = lam, size = size,
prob = prob, rho = Rey)$constants[1, "c5"], 0.0000006124845,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr(k_cont = 1, k_cat = 1, k_pois = 1,
k_nb = 1, method = "Polynomial", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], fifths = L[5], sixths = L[6], Six = Six,
marginal = marginal, lam = lam, size = size,
mu = mu, rho = Rey)$constants[1, "c5"], 0.0000006124845,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr(k_cont = 1, k_cat = 0, k_pois = 1,
k_nb = 1, method = "Polynomial", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], fifths = L[5], sixths = L[6], Six = Six,
lam = lam, size = size, prob = prob,
rho = Rey[1:3, 1:3])$constants[1, "c5"], 0.0000006124845,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr(k_cont = 1, k_cat = 0, k_pois = 1,
k_nb = 1, method = "Polynomial", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], fifths = L[5], sixths = L[6], Six = Six,
lam = lam, size = size, mu = mu, rho = Rey[1:3, 1:3])$constants[1, "c5"],
0.0000006124845, tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr(k_cont = 1, k_cat = 1, k_pois = 0,
k_nb = 1, method = "Polynomial", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], fifths = L[5], sixths = L[6], Six = Six,
marginal = marginal, size = size,
prob = prob, rho = Rey[1:3, 1:3])$constants[1, "c5"], 0.0000006124845,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr(k_cont = 1, k_cat = 1, k_pois = 0, k_nb = 1,
k_nb = 1, method = "Polynomial", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], fifths = L[5], sixths = L[6], Six = Six, marginal = marginal,
size = size, mu = mu, rho = Rey[1:3, 1:3])$constants[1, "c5"],
0.0000006124845, tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr(k_cont = 1, k_cat = 1, k_pois = 0,
k_nb = 1, method = "Polynomial", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], fifths = L[5], sixths = L[6], Six = Six, marginal = marginal,
size = size, mu = mu, rho = Rey[1:3, 1:3])$constants[1, "c5"],
0.0000006124845, tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr(k_cont = 1, k_cat = 1, k_pois = 1,
method = "Polynomial", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], fifths = L[5], sixths = L[6], Six = Six,
marginal = marginal, lam = lam,
rho = Rey[1:3, 1:3])$constants[1, "c5"], 0.0000006124845,
tolerance = tol, check.attributes = FALSE), TRUE)
Rey2 <- matrix(0.4, 5, 5)
diag(Rey2) <- 1
expect_equal(all.equal(valid_corr(k_cont = 2, k_cat = 1, k_pois = 1,
k_nb = 1, method = "Polynomial", means = rep(L[1], 2),
vars = rep(L[2]^2, 2), skews = rep(L[3], 2), skurts = rep(L[4], 2),
fifths = rep(L[5], 2), sixths = rep(L[6], 2), Six = list(1.75, 1.75),
marginal = marginal, lam = lam, size = size,
prob = prob, rho = Rey2)$constants[1, "c5"], 0.0000006124845,
tolerance = tol, check.attributes = FALSE), TRUE)
pois_eps <- 0.0001
size <- 2
prob <- 0.75
mu <- size * (1 - prob)/prob
nb_eps <- 0.0001
valid_corr2(k_cat = 1, k_pois = 1, k_nb = 1,
marginal = marginal, lam = lam, pois_eps = pois_eps, size = size,
prob = prob, nb_eps = nb_eps, rho = Rey[1:3, 1:3])$L_rho[1, 2]
expect_equal(all.equal(valid_corr2(k_cat = 1, k_pois = 1, k_nb = 1,
marginal = marginal, lam = lam, pois_eps = pois_eps, size = size,
prob = prob, nb_eps = nb_eps, rho = Rey[1:3, 1:3])$L_rho[1, 2], -0.7898746,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr2(k_cat = 1, k_pois = 1, k_nb = 1,
marginal = marginal, lam = lam, pois_eps = pois_eps, size = size,
mu = mu, nb_eps = nb_eps, rho = Rey[1:3, 1:3])$L_rho[1, 2], -0.7898746,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr2(k_cont = 1, k_cat = 1, k_pois = 1,
k_nb = 1, method = "Fleishman", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], marginal = marginal,
lam = lam, pois_eps = pois_eps, size = size,
prob = prob, nb_eps = nb_eps, rho = Rey)$constants[1, "c3"],
0.03605955, tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr2(k_cont = 1, k_cat = 1, k_pois = 1,
k_nb = 1, method = "Fleishman", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], marginal = marginal,
lam = lam, pois_eps = pois_eps, size = size,
mu = mu, nb_eps = nb_eps, rho = Rey)$constants[1, "c3"], 0.03605955,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr2(k_cont = 1, k_cat = 0, k_pois = 1,
k_nb = 1, method = "Fleishman", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], lam = lam, pois_eps = pois_eps, size = size,
prob = prob, nb_eps = nb_eps, rho = Rey[1:3, 1:3])$constants[1, "c3"],
0.03605955, tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr2(k_cont = 1, k_cat = 0, k_pois = 1,
k_nb = 1, method = "Fleishman", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], lam = lam, pois_eps = pois_eps, size = size,
mu = mu, nb_eps = nb_eps, rho = Rey[1:3, 1:3])$constants[1, "c3"],
0.03605955, tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr2(k_cont = 1, k_cat = 1, k_pois = 0,
k_nb = 1, method = "Fleishman", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], marginal = marginal, nb_eps = nb_eps,
size = size, prob = prob, rho = Rey[1:3, 1:3])$constants[1, "c3"],
0.03605955, tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr2(k_cont = 1, k_cat = 1, k_pois = 0,
k_nb = 1, method = "Fleishman", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], marginal = marginal, nb_eps = nb_eps,
size = size, mu = mu, rho = Rey[1:3, 1:3])$constants[1, "c3"], 0.03605955,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr2(k_cont = 1, k_cat = 1, k_pois = 1,
method = "Fleishman", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], marginal = marginal, pois_eps = pois_eps,
lam = lam, rho = Rey[1:3, 1:3])$constants[1, "c3"], 0.03605955,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr2(k_cont = 1, k_cat = 1, k_pois = 1,
k_nb = 1, method = "Polynomial", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], fifths = L[5], sixths = L[6], Six = Six,
marginal = marginal, lam = lam, pois_eps = pois_eps, size = size,
prob = prob, nb_eps = nb_eps, rho = Rey)$constants[1, "c5"],
0.0000006124845, tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr2(k_cont = 1, k_cat = 1, k_pois = 1,
k_nb = 1, method = "Polynomial", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], fifths = L[5], sixths = L[6], Six = Six,
marginal = marginal, lam = lam, pois_eps = pois_eps, size = size,
mu = mu, nb_eps = nb_eps, rho = Rey)$constants[1, "c5"], 0.0000006124845,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr2(k_cont = 1, k_cat = 0, k_pois = 1,
k_nb = 1, method = "Polynomial", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], fifths = L[5], sixths = L[6], Six = Six,
lam = lam, pois_eps = pois_eps, size = size,
prob = prob, nb_eps = nb_eps, rho = Rey[1:3, 1:3])$constants[1, "c5"],
0.0000006124845, tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr2(k_cont = 1, k_cat = 0, k_pois = 1,
k_nb = 1, method = "Polynomial", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], fifths = L[5], sixths = L[6], Six = Six,
lam = lam, pois_eps = pois_eps, size = size,
prob = prob, nb_eps = nb_eps, rho = Rey[1:3, 1:3])$constants[1, "c5"],
0.0000006124845, tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr2(k_cont = 1, k_cat = 1, k_pois = 0,
k_nb = 1, method = "Polynomial", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], fifths = L[5], sixths = L[6], Six = Six,
marginal = marginal, size = size, nb_eps = nb_eps,
prob = prob, rho = Rey[1:3, 1:3])$constants[1, "c5"], 0.0000006124845,
tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr2(k_cont = 1, k_cat = 1, k_pois = 0,
k_nb = 1, method = "Polynomial", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], fifths = L[5], sixths = L[6], Six = Six, marginal = marginal,
size = size, mu = mu, nb_eps = nb_eps,
rho = Rey[1:3, 1:3])$constants[1, "c5"],
0.0000006124845, tolerance = tol, check.attributes = FALSE), TRUE)
expect_equal(all.equal(valid_corr2(k_cont = 1, k_cat = 1, k_pois = 1,
method = "Polynomial", means = L[1], vars = L[2]^2, skews = L[3],
skurts = L[4], fifths = L[5], sixths = L[6], Six = Six,
marginal = marginal, lam = lam, pois_eps = pois_eps,
rho = Rey[1:3, 1:3])$constants[1, "c5"], 0.0000006124845,
tolerance = tol, check.attributes = FALSE), TRUE)
Rey2 <- matrix(0.4, 5, 5)
diag(Rey2) <- 1
expect_equal(all.equal(valid_corr2(k_cont = 2, k_cat = 1, k_pois = 1,
k_nb = 1, method = "Polynomial", means = rep(L[1], 2),
vars = rep(L[2]^2, 2), skews = rep(L[3], 2), skurts = rep(L[4], 2),
fifths = rep(L[5], 2), sixths = rep(L[6], 2), Six = list(1.75, 1.75),
marginal = marginal, lam = lam, pois_eps = pois_eps, size = size,
prob = prob, nb_eps = nb_eps, rho = Rey2)$constants[1, "c5"],
0.0000006124845, tolerance = tol, check.attributes = FALSE), TRUE)
?plot_cdf
W <- calc_theory("Weibull", c(3, 5))
Six <- seq(0.1, 1, 0.01)
CF <- find_constants("Fleishman", W[3], W[4])$constants
CP <- find_constants("Polynomial", W[3], W[4], W[5], W[6], Six = Six)$constants
P <- plot_cdf(CF, "Fleishman", calc_cprob = FALSE, delta = 1)
P
class(P)
expect_is(plot_cdf(CF, "Fleishman", calc_cprob = FALSE, delta = 1), "ggplot")
expect_is(plot_cdf(CF, "Fleishman", mu = W[1], sigma = W[2],
calc_cprob = FALSE), "ggplot")
expect_is(plot_cdf(CF, "Fleishman", mu = W[1], sigma = W[2],
calc_cprob = TRUE, delta = 1), "ggplot")
plot_cdf(CF, "Fleishman", mu = W[1], sigma = W[2],
calc_cprob = TRUE, delta = 1)
plot_cdf(CF, "Fleishman", mu = W[1], sigma = W[2],
calc_cprob = TRUE, delta = 7.5)
plot_cdf(CP, "Polynomial", mu = W[1], sigma = W[2],
calc_cprob = TRUE, delta = 7.5)
plot_cdf(CP, "Polynomial", mu = W[1], sigma = W[2],
calc_cprob = TRUE, delta = 5)
expect_is(plot_cdf(CP, "Polynomial", mu = W[1], sigma = W[2],
calc_cprob = TRUE, delta = 5), "ggplot")
cdf_prob(CF, "Fleishman", delta = 5, mu = W[1], sigma = W[2])
cdf_prob(CP, "Polynomial", delta = 5, mu = W[1], sigma = W[2])
cdf_prob(CF, "Fleishman", delta = 5, mu = W[1], sigma = W[2], lower = 0, upper = 1)
c <- as.numeric(CF)
c
n = 10000
mu = W[1]; sigma = W[2]
z <- rnorm(n, 0, 1)
y <- numeric(n)
phi <- numeric(n)
for (i in 1:length(z)) {
if (method == "Fleishman") {
y[i] <- sigma * (c[1] + c[2] * z[i] + c[3] * z[i]^2 + c[4] * z[i]^3) + mu
}
if (method == "Polynomial") {
y[i] <- sigma * (c[1] + c[2] * z[i] + c[3] * z[i]^2 + c[4] * z[i]^3 +
c[5] * z[i]^4 + c[6] * z[i]^5) + mu
}
phi[i] <- pnorm(z[i])
}
method = "Fleishman"
z <- rnorm(n, 0, 1)
y <- numeric(n)
phi <- numeric(n)
for (i in 1:length(z)) {
if (method == "Fleishman") {
y[i] <- sigma * (c[1] + c[2] * z[i] + c[3] * z[i]^2 + c[4] * z[i]^3) + mu
}
if (method == "Polynomial") {
y[i] <- sigma * (c[1] + c[2] * z[i] + c[3] * z[i]^2 + c[4] * z[i]^3 +
c[5] * z[i]^4 + c[6] * z[i]^5) + mu
}
phi[i] <- pnorm(z[i])
}
ylower <- min(y)
yupper <- max(y)
ylower
yupper
cdf_prob(CF, "Fleishman", delta = 5, mu = W[1], sigma = W[2], lower = ylower, upper = yupper)
library(SimMultiCorrData)
W <- calc_theory("Weibull", c(3, 5))
Six <- seq(0.1, 1, 0.01)
CF <- find_constants("Fleishman", W[3], W[4])$constants
CP <- find_constants("Polynomial", W[3], W[4], W[5], W[6], Six = Six)$constants
plot_cdf(CF, "Fleishman", mu = W[1], sigma = W[2],
calc_cprob = TRUE, delta = 5, lower = 0, upper = 10)
plot_cdf(CF, "Fleishman", mu = W[1], sigma = W[2],
calc_cprob = TRUE, delta = 5, lower = 0, upper = 1)
plot_cdf(CP, "Polynomial", mu = W[1], sigma = W[2],
calc_cprob = TRUE, delta = 5, lower = 0, upper = 1)
W <- calc_theory("Weibull", c(3, 5))
Six <- seq(0.1, 1, 0.01)
WF <- nonnormvar1(method = "Fleishman", means = W[1], vars = W[2]^2,
skews = W[3], skurts = W[4])
names(WF)
?plot_sim_cdf
W <- calc_theory("Weibull", c(3, 5))
Six <- seq(0.1, 1, 0.01)
WF <- nonnormvar1(method = "Fleishman", means = W[1], vars = W[2]^2,
skews = W[3], skurts = W[4])$continuous_variable
WP <- nonnormvar1(method = "Polynomial", means = W[1], vars = W[2]^2,
skews = W[3], skurts = W[4], fifths = W[5],
sixths = W[6], Six = Six)$continuous_variable
plot_sim_cdf(WF[, 1], calc_cprob = FALSE)
plot_sim_cdf(WF[, 1], calc_cprob = TRUE, delta = 5)
plot_sim_cdf(WP[, 1], calc_cprob = FALSE)
plot_sim_cdf(WP[, 1], calc_cprob = TRUE, delta = 5)
?plot_pdf_theory
?rweibull
?exp()
W <- calc_theory("Weibull", c(3, 5))
Six <- seq(0.1, 1, 0.01)
CF <- find_constants("Fleishman", W[3], W[4])$constants
CP <- find_constants("Polynomial", W[3], W[4], W[5], W[6], Six = Six)$constants
plot_pdf_theory(CF, "Fleishman", mu = W[1], sigma = W[2],
overlay = FALSE)
plot_pdf_theory(CF, "Fleishman", mu = W[1], sigma = W[2],
overlay = TRUE, Dist = "Weibull", params = c(3, 5))
plot_pdf_theory(CF, "Fleishman", mu = W[1], sigma = W[2],
overlay = TRUE,
fx = function(x) (3/5) * (x/5)^2 * exp(-(x/5)^2),
lower = 0, upper = Inf)
plot_pdf_theory(CF, "Fleishman",
overlay = TRUE,
fx = function(x) (3/5) * (x/5)^2 * exp(-(x/5)^2),
lower = 0, upper = Inf)
plot_pdf_theory(CP, "Polynomial", mu = W[1], sigma = W[2],
overlay = FALSE)
plot_pdf_theory(CP, "Polynomial", mu = W[1], sigma = W[2],
overlay = TRUE, Dist = "Weibull", params = c(3, 5))
plot_pdf_theory(CP, "Polynomial", mu = W[1], sigma = W[2],
overlay = TRUE,
fx = function(x) (3/5) * (x/5)^2 * exp(-(x/5)^2),
lower = 0, upper = Inf)
?rweibull
plot_pdf_theory(CF, "Fleishman", mu = W[1], sigma = W[2],
overlay = TRUE,
fx = function(x) (3/5) * (x/5)^2 * exp(-(x/5)^3),
lower = 0, upper = Inf)
plot_pdf_theory(CP, "Polynomial", mu = W[1], sigma = W[2],
overlay = FALSE)
plot_pdf_theory(CP, "Polynomial", mu = W[1], sigma = W[2],
overlay = TRUE, Dist = "Weibull", params = c(3, 5))
plot_pdf_theory(CP, "Polynomial", mu = W[1], sigma = W[2],
overlay = TRUE,
fx = function(x) (3/5) * (x/5)^2 * exp(-(x/5)^3),
lower = 0, upper = Inf)
?plot_pdf_theory
?plot_pdf_ext
WF <- nonnormvar1(method = "Fleishman", means = W[1], vars = W[2]^2,
skews = W[3], skurts = W[4])$continuous_variable
WP <- nonnormvar1(method = "Polynomial", means = W[1], vars = W[2]^2,
skews = W[3], skurts = W[4], fifths = W[5],
sixths = W[6], Six = Six)$continuous_variable
CF <- WF$constants
CP <- WP$constants
plot_pdf_ext(CF, "Fleishman",
ext_y = WF$continuous_variable[, 1])
names(WF)
WF <- nonnormvar1(method = "Fleishman", means = W[1], vars = W[2]^2,
skews = W[3], skurts = W[4])
WP <- nonnormvar1(method = "Polynomial", means = W[1], vars = W[2]^2,
skews = W[3], skurts = W[4], fifths = W[5],
sixths = W[6], Six = Six)
CF <- WF$constants
CP <- WP$constants
plot_pdf_ext(CF, "Fleishman",
ext_y = WF$continuous_variable[, 1])
plot_pdf_ext(CP, "Polynomial",
ext_y = WP$continuous_variable[, 1])
?plot_sim_pdf_theory
marginal <- list(0.3)
lam <- 0.5
size <- 2
prob <- 0.75
mu <- size * (1 - prob)/prob
Rey <- matrix(0.4, 3, 3)
diag(Rey) <- 1
Sim1 <- rcorrvar(k_cat = 1, k_pois = 1, k_nb = 1, marginal = marginal,
support = list(c(0, 1)), lam = lam, size = size, prob = prob, rho = Rey)
names(Sim1)
plot_sim_cdf(Sim1$ordinal_variables[, 1], calc_cprob = FALSE)
plot_sim_pdf_theory(Sim1$Poisson_variables[, 1],
overlay = FALSE)
plot_sim_pdf_theory(Sim1$Poisson_variables[, 1],
overlay = TRUE, Dist = "Poisson", params = lam)
?`SimMultiCorrData-package`
plot_sim_pdf_theory(Sim1$Poisson_variables[, 1], cont_var = FALSE,
Dist = "Poisson", params = lam)
marginal <- list(0.3)
lam <- 5
size <- 2
prob <- 0.75
Rey <- matrix(0.4, 3, 3)
diag(Rey) <- 1
Sim1 <- rcorrvar(k_cat = 1, k_pois = 1, k_nb = 1, marginal = marginal,
support = list(c(0, 1)), lam = lam, size = size, prob = prob, rho = Rey)
plot_sim_pdf_theory(Sim1$Poisson_variables[, 1], cont_var = FALSE,
Dist = "Poisson", params = lam)
names(Sim1)
plot_sim_pdf_theory(Sim1$Neg_Bin_variables[, 1],
overlay = FALSE)
plot_sim_pdf_theory(Sim1$Neg_Bin_variables[, 1], cont_var = FALSE,
Dist = "Negative_Binomial", params = c(size, prob))
?plot_sim_pdf_ext
plot_sim_pdf_ext(WP$continuous_variable[, 1],
ext_y = rweibull(10000, 3, 5))
plot_sim_pdf_ext(Sim1$Poisson_variables[, 1],
ext_y = rpois(10000, lam))
plot_sim_pdf_ext(Sim1$Neg_Bin_variables[, 1],
ext_y = rnbinom(10000, size, prob))
?plot_sim_theory
plot_sim_theory(WP$continuous_variable[, 1],
overlay = FALSE)
plot_sim_theory(WP$continuous_variable[, 1],
overlay = TRUE, Dist = "Weibull", params = c(3, 5))
plot_sim_theory(WP$continuous_variable[, 1],
overlay = TRUE,
fx = function(x) (3/5) * (x/5)^2 * exp(-(x/5)^3),
lower = 0, upper = Inf)
?uniroot
plot_sim_theory(WP$continuous_variable[, 1],
overlay = TRUE,
fx = function(x) (3/5) * (x/5)^2 * exp(-(x/5)^3),
lower = 0, upper = 1e8)
library(SimMultiCorrData)
plot_sim_theory(WP$continuous_variable[, 1],
overlay = TRUE,
fx = function(x) (3/5) * (x/5)^2 * exp(-(x/5)^3),
lower = 0, upper = 1e8)
plot_sim_theory(WP$continuous_variable[, 1],
overlay = TRUE,
fx = function(x) (3/5) * (x/5)^2 * exp(-(x/5)^3),
lower = 0.00001, upper = 1000)
plot_sim_theory(Sim1$Poisson_variables[, 1],
overlay = FALSE)
plot_sim_theory(Sim1$Poisson_variables[, 1], cont_var = FALSE,
Dist = "Poisson", params = lam)
plot_sim_theory(Sim1$Neg_Bin_variables[, 1],
overlay = FALSE)
plot_sim_theory(Sim1$Neg_Bin_variables[, 1], cont_var = FALSE,
Dist = "Negative_Binomial", params = c(size, prob))
plot_sim_ext(WP$continuous_variable[, 1],
ext_y = rweibull(10000, 3, 5))
plot_sim_ext(Sim1$Poisson_variables[, 1],
ext_y = rpois(10000, lam))
plot_sim_ext(Sim1$Neg_Bin_variables[, 1],
ext_y = rnbinom(10000, size, prob))
library(SimMultiCorrData)
library(devtools)
system(”R CMD Rd2pdf C:/Users/Allison/Documents/SimMultiCorrData”)
system("R CMD Rd2pdf C:/Users/Allison/Documents/SimMultiCorrData")
system("R CMD Rd2pdf C:/Users/Allison/Documents/SimMultiCorrData")
devtools::check()
devtools::test()
library(SimMultiCorrData)
?stats_pdf
library(SimMultiCorrData)
library(SimMultiCorrData)
?`SimMultiCorrData-package`
library(devtools)
devtools::build_vignettes()
?skip_on_cran()
library(SimMultiCorrData)
?stats_pdf
tol <- 1e-5
W <- calc_theory("Weibull", c(3, 5))
Six <- seq(0.1, 1, 0.01)
CF <- find_constants("Fleishman", W[3], W[4])$constants
CP <- find_constants("Polynomial", W[3], W[4], W[5], W[6], Six = Six)$constants
stats_pdf(CF, "Fleishman", mu = W[1], sigma = W[2])
W <- calc_theory("Logistic", c(0, 1))
Six <- 1.75
CF <- find_constants("Fleishman", W[3], W[4])
CP <- find_constants("Polynomial", W[3], W[4], W[5], W[6], Six = Six)
CF
stats_pdf(CF, "Fleishman", mu = W[1], sigma = W[2])
CF <- find_constants("Fleishman", W[3], W[4])$constants
CP <- find_constants("Polynomial", W[3], W[4], W[5], W[6], Six = Six)$constants
stats_pdf(CF, "Fleishman", mu = W[1], sigma = W[2])
stats_pdf(CP, "Polynomial", mu = W[1],
sigma = W[2])
pdf_check(CF, "Fleishman")
N <- calc_theory("Gaussian", c(0, 1))
N
NF <- find_constants("Fleishman", N[3], N[4])
NP <- find_constants("Polynomial", N[3], N[4], N[5], N[6])
NF
NP
N
round(N, 8)
library(SimMultiCorrData)
N <- calc_theory("Gaussian", c(0, 1))
NF <- find_constants("Fleishman", N[3], N[4])
NP <- find_constants("Polynomial", N[3], N[4], N[5], N[6])
NF
?power_norm_corr
power_norm_corr(CF, "Fleishman")
power_norm_corr(CP, "Polynomial")
library(devtools)
build_win(version = "R-release")
build_win(version = "R-devel")
devtools::use_build_ignore("tests")
build_win(version = "R-release")
build_win(version = "R-devel")
devtools::check()
build_win(version = "R-release")
build_win(version = "R-devel")
suppressMessages(library(SimMultiCorrData))
build_win(version = "R-release")
build_win(version = "R-devel")
library(SimMultiCorrData)
library(devtools)
build_win(version = "R-release")
devtools::check()
