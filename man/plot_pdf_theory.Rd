% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_pdf_theory.R
\name{plot_pdf_theory}
\alias{plot_pdf_theory}
\title{Plot Theoretical Power Method Probability Density Function and Target PDF by Distribution Name or Function}
\usage{
plot_pdf_theory(c = NULL, method = c("Fleishman", "Polynomial"),
  title = "Probability Density Function", ylower = NULL, yupper = NULL,
  power_color = "dark blue", overlay = TRUE, target_color = "dark green",
  target_lty = 2, Dist = c("Beta", "Chisq", "Exponential", "F", "Gamma",
  "Gaussian", "Laplace", "Logistic", "Lognormal", "Pareto", "Rayleigh", "t",
  "Triangular", "Uniform", "Weibull"), params = NULL, fx = NULL, n = 100,
  seed = 1234)
}
\arguments{
\item{c}{a vector of constants c0, c1, c2, c3 (if \code{method} = "Fleishman") or c0, c1, c2, c3, c4, c5 (if \code{method} =
"Polynomial"), like that returned by \code{\link[SimMultiCorrData]{find_constants}}}

\item{method}{the method used to generate the continuous variable \eqn{y = p(z)}.  "Fleishman" uses a third-order polynomial
transformation and "Polynomial" uses Headrick's fifth-order transformation.}

\item{title}{the title for the graph (default = "Probability Density Function")}

\item{ylower}{the lower y value to use in the plot (default = NULL, uses minimum simulated y value)}

\item{yupper}{the upper y value (default = NULL, uses maximum simulated y value)}

\item{power_color}{the line color for the power method pdf}

\item{overlay}{if TRUE (default), the target distribution is also plotted given either a distribution name (and parameters)
or pdf function fx (with bounds = ylower, yupper)}

\item{target_color}{the line color for the target pdf}

\item{target_lty}{the line type for the target pdf (default = 2, dashed line)}

\item{Dist}{name of the distribution. The possible values are: "Beta", "Chisq", "Exponential", "F", "Gamma", "Gaussian",
"Laplace", "Logistic", "Lognormal", "Pareto", "Rayleigh", "t", "Triangular", "Uniform", "Weibull".
Please refer to the documentation for each package (i.e. \code{\link[stats]{dgamma}})
for information on appropriate parameter inputs.  The pareto (see \code{\link[VGAM]{dpareto}}), generalized
rayleigh (see \code{\link[VGAM]{dgenray}}), and laplace (see \code{\link[VGAM]{dlaplace}}) distributions
come from the \code{\link[VGAM]{VGAM}} package.  The triangular (see \code{\link[triangle]{dtriangle}}) distribution
comes from the \code{\link[triangle]{triangle}} package.}

\item{params}{a vector of parameters (up to 3) for the desired distribution (keep NULL if \code{fx} supplied instead)}

\item{fx}{a pdf input as a function of x only, i.e. fx <- function(x) 0.5*(x-1)^2; must return a scalar
(keep NULL if \code{Dist} supplied instead)}

\item{n}{the number of random standard normal numbers to use in generating y = p(z)}

\item{seed}{the seed value for random number generation}
}
\value{
A \code{\link[ggplot2]{ggplot2}} object.
}
\description{
This plots the theoretical probability density function: \eqn{f_p(Z)(p(z)) = f_p(Z)(p(z), f_Z(z)/p'(z))} and target
    pdf (if overlay = TRUE).  It is a parametric plot with \eqn{sigma * y + mu}, where \eqn{y = p(z)}, on the x-axis and
    \eqn{f_Z(z)/p'(z)} on the y-axis,
    where z is vector of n random standard normal numbers (generated with a seed set by user).  Given a vector of polynomial
    transformation constants, the function generates \eqn{sigma * y + mu} and calculates the theoretical probabilities
    using \eqn{f_p(Z)(p(z), f_Z(z)/p'(z))}.  If \code{overlay} = TRUE, the target distribution is also plotted given either a
    distribution name (plus up to 3 parameters) or a pdf.
    It returns a \code{\link[ggplot2]{ggplot2}} object so the user can modify as necessary.  The graph parameters
    (i.e. \code{title}, \code{power_color},
    \code{target_color}, \code{target_lty}) are \code{\link[ggplot2]{ggplot2}} parameters.  It works for valid or invalid power method pdfs.
}
\examples{
\dontrun{
# Logistic Distribution

# Find standardized cumulants
stcum <- calc_theory(Dist = "Logistic", params = c(0, 1))

# Find constants without the sixth cumulant correction
# (invalid power method pdf)
con1 <- find_constants(method = "Polynomial", skews = stcum[3],
                      skurts = stcum[4], fifths = stcum[5],
                      sixths = stcum[6], Six = NULL,
                      n = 25, seed = 1234)

# Plot invalid power method pdf with theoretical pdf overlayed
plot_pdf_theory(c = con1$constants, method = "Polynomial",
         title = "Invalid Logistic PDF", overlay = TRUE,
         Dist = "Logistic", params = c(0, 1), n = 100,
         seed = 1234)

# Find constants with the sixth cumulant correction
# (valid power method pdf)
con2 <- find_constants(method = "Polynomial", skews = stcum[3],
                      skurts = stcum[4], fifths = stcum[5],
                      sixths = stcum[6], Six = seq(1.5, 2, 0.05),
                      n = 25, seed = 1234)

# Plot valid power method pdf with theoretical pdf overlayed
plot_pdf_theory(c = con2$constants, method = "Polynomial",
         title = "Valid Logistic PDF", overlay = TRUE,
         Dist = "Logistic", params = c(0, 1), n = 100,
         seed = 1234)
}

}
\references{
Headrick TC (2002). Fast Fifth-order Polynomial Transforms for Generating Univariate and Multivariate
Non-normal Distributions. Computational Statistics & Data Analysis 40(4):685-711
(\href{http://www.sciencedirect.com/science/article/pii/S0167947302000725}{ScienceDirect})

Fleishman AI (1978). A Method for Simulating Non-normal Distributions. Psychometrika, 43, 521-532.

Headrick TC, Kowalchuk RK (2007). The Power Method Transformation: Its Probability Density Function, Distribution
    Function, and Its Further Use for Fitting Data. Journal of Statistical Computation and Simulation, 77, 229-249.

Headrick TC, Sheng Y, & Hodis FA (2007). Numerical Computing and Graphics for the Power Method Transformation Using
    Mathematica. Journal of Statistical Software, 19(3), 1 - 17. \doi{10.18637/jss.v019.i03}.

Headrick TC, Sawilowsky SS (1999). Simulating Correlated Non-normal Distributions: Extending the Fleishman Power
    Method. Psychometrika, 64, 25-35.

Headrick TC (2004). On Polynomial Transformations for Simulating Multivariate Nonnormal Distributions.
    Journal of Modern Applied Statistical Methods, 3, 65-71.

Wickham H. ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York, 2009.
}
\seealso{
\code{\link[SimMultiCorrData]{find_constants}}, \code{\link[SimMultiCorrData]{calc_theory}},
    \code{\link[ggplot2]{ggplot}}, \code{\link[ggplot2]{geom_line}}
}
\keyword{Fleishman,}
\keyword{Headrick}
\keyword{pdf,}
\keyword{plot,}
\keyword{theoretical,}
